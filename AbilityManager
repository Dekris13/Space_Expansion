using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class AbilityManager : MonoBehaviour
{
    public bool shipYard;
    public bool station;
    public bool starGate;

    public GameObject ShipYardButton;
    public GameObject StationButton;
    public GameObject StarGateButton;
    public GameObject StarGateExitPosButton;

    public GameObject ShipYardDiscription;
    public GameObject StationDiscription;
    public GameObject StarGateDiscription;

    public bool mainMenu;

    void Awake()
    {
        if (!mainMenu)
        {
            int level = PlayerPrefs.GetInt("CurrientLevel", 0);
            if (level > 3 & level <= 5)
            {
                ShipYardButton.SetActive(true);
            }
            if (level > 5 & level <= 10)
            {
                ShipYardButton.SetActive(true);
                StationButton.SetActive(true);
            }
            if (level > 10)
            {
                ShipYardButton.SetActive(true);
                StationButton.SetActive(true);
                StarGateButton.SetActive(true);
            }
        }

        if (mainMenu)
        {
            Effects.FadeScreen(Color.black, 1, 0, 0.3f);
        }

        int sy = PlayerPrefs.GetInt("ShipYard", 0);
        int st = PlayerPrefs.GetInt("Station", 0);
        int sg = PlayerPrefs.GetInt("StarGate", 0);

        if (sy == 1)
        {
            shipYard = true;
        }
        if (st == 1)
        {
            station = true;
        }
        if (sg == 1)
        {
            starGate = true;
        }
    }

    void Start()
    {
        if (!shipYard)
        {
            Invoke("ShowSY", 0.3f);
        }
        if (!station)
        {
            Invoke("ShowSt", 0.3f);
        }
        if (!starGate)
        {
            Invoke("ShowSG", 0.3f);
        }
    }

    void ShowSY()
    {
        if (ShipYardButton.activeSelf)
        {
            PauseController.gameIsPaused = true;
            Time.timeScale = 0;
            ShipYardDiscription.SetActive(true);
        }
    }
    void ShowSt()
    {
        if (StationButton.activeSelf)
        {
            PauseController.gameIsPaused = true;
            Time.timeScale = 0;
            StationDiscription.SetActive(true);
        }
    }
    void ShowSG()
    {
        if (StarGateButton.activeSelf)
        {
            PauseController.gameIsPaused = true;
            Time.timeScale = 0;
            StarGateDiscription.SetActive(true);
        }
    }
}
